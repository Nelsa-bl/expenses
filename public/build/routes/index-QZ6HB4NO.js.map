{
  "version": 3,
  "sources": ["browser-route-module:C:\\Users\\Sanel\\Desktop\\alesco-tech-task\\app\\routes\\index.tsx?browser", "../../../app/routes/index.tsx", "../../../app/config.ts"],
  "sourcesContent": ["export { default } from \"C:\\\\Users\\\\Sanel\\\\Desktop\\\\alesco-tech-task\\\\app\\\\routes\\\\index.tsx\";", "import { useEffect, useState } from \"react\";\n\n// Import API_URL\nimport { API_URL } from \"~/config\";\n\ntype Expense = {\n  id: number;\n  name: string;\n  net: string;\n  tax: string;\n};\n\ntype Favorite = {\n  id: number;\n};\n\nexport default function Index() {\n  const [expenses, setExpenses] = useState<Expense[]>([]);\n  const [favorites, setFavorites] = useState<Favorite[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [showFavorites, setShowFavorites] = useState<boolean>(false);\n\n  // Get API data\n  useEffect(() => {\n    const getExpensesMap = async () => {\n      try {\n        setIsLoading(true);\n        const getExpensesFromAPI = await fetch(API_URL);\n        if (!getExpensesFromAPI.ok) {\n          throw new Error(\n            `Problem getting products. Status: ${getExpensesFromAPI.status}`\n          );\n        }\n        const data = await getExpensesFromAPI.json();\n        setIsLoading(false);\n        setExpenses(data.items);\n      } catch (err) {\n        // If error then show message\n        let message;\n        if (err instanceof Error) message = err.message;\n        else message = String(err);\n        console.error({ message });\n      }\n    };\n    getExpensesMap();\n  }, []);\n\n  // Calculate the Gross\n  // Calculate the Gross\n  const calcGross = (net: string, tax: string) => {\n    return Number(net) + Number(tax);\n  };\n\n  // Calculate the total expenses\n  const calcTotalExpenses = (expenses: Expense[]) => {\n    return expenses.reduce((sum, expense) => {\n      const gross = Number(expense.net) + Number(expense.tax);\n      const total = sum + gross;\n      return total;\n    }, 0);\n  };\n\n  // Get total expenses for all expenses\n  const calcTotal = calcTotalExpenses(expenses);\n\n  // Get total expenses for favorites\n  const calcTotalFavorites = calcTotalExpenses(\n    expenses.filter((expense) =>\n      favorites.some((favorite) => favorite.id === expense.id)\n    )\n  );\n\n  // Format currency\n  const formatCurrency = (value: number) =>\n    new Intl.NumberFormat(\"de-DE\", {\n      style: \"currency\",\n      currency: \"EUR\",\n    }).format(value);\n\n  // Add Favourites\n  const addFavorite = (productToAdd: Expense) => {\n    setFavorites([...favorites, { id: productToAdd.id }]);\n  };\n\n  // Remove Favourite\n  const removeFavorite = (productToRemove: Expense) => {\n    setFavorites(\n      favorites.filter((favorite) => favorite.id !== productToRemove.id)\n    );\n  };\n\n  // Render all expenses or favorites\n  const showExpense = (expenses: Expense[]) => {\n    return (\n      <div className=\"expenses-container\">\n        {expenses.map((expense) => (\n          <div key={expense.id} className=\"expenses-item\">\n            <h2>{expense.name}</h2>\n            <p>Net: {formatCurrency(Number(expense.net))}</p>\n            <p>Tax: {formatCurrency(Number(expense.tax))}</p>\n            <p>Gross: {formatCurrency(calcGross(expense.net, expense.tax))}</p>\n            <span\n              className=\"fav-icon\"\n              onClick={() => {\n                if (favorites.some((favorite) => favorite.id === expense.id)) {\n                  removeFavorite(expense);\n                } else {\n                  addFavorite(expense);\n                }\n              }}\n            >\n              {favorites.some((favorite) => favorite.id === expense.id)\n                ? \"\u2764\uFE0F\"\n                : \"\uD83E\uDD0D\"}\n            </span>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <h1>Alasco HQ: Expense Tracking</h1>\n\n      <div>\n        <button\n          className={`filter-btn ${showFavorites ? \"\" : \"active\"}`}\n          onClick={() => setShowFavorites(false)}\n        >\n          All ({expenses.length})\n        </button>\n        <button\n          className={`filter-btn ${showFavorites ? \"active\" : \"\"}`}\n          onClick={() => setShowFavorites(true)}\n        >\n          Favorites ({favorites.length})\n        </button>\n      </div>\n\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        <>\n          {showFavorites\n            ? showExpense(\n                expenses.filter((expense) =>\n                  favorites.some((favorite) => favorite.id === expense.id)\n                )\n              )\n            : showExpense(expenses)}\n\n          {showFavorites && favorites.length > 0 && (\n            <h3>\n              Total expenses for favorites: {formatCurrency(calcTotalFavorites)}\n            </h3>\n          )}\n\n          {!showFavorites && (\n            <h3>Total expenses: {formatCurrency(calcTotal)}</h3>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n", "export const API_URL =\n  \"https://9tt010tdl0.execute-api.eu-central-1.amazonaws.com/prod\";\n"],
  "mappings": "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",
  "names": []
}
