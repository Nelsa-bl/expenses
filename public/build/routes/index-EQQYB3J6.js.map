{
  "version": 3,
  "sources": ["browser-route-module:C:\\Users\\Sanel\\Desktop\\alesco-tech-task\\app\\routes\\index.tsx?browser", "../../../app/routes/index.tsx", "../../../app/config.ts"],
  "sourcesContent": ["export { default } from \"C:\\\\Users\\\\Sanel\\\\Desktop\\\\alesco-tech-task\\\\app\\\\routes\\\\index.tsx\";", "import { useEffect, useState } from \"react\";\n\n// Import API_URL\nimport { API_URL } from \"~/config\";\n\nexport default function Index() {\n  const [expenses, setExpenses] = useState([]);\n  const [favourites, setFavourites] = useState([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [totalExpenses, setTotalExpenses] = useState(0);\n\n  // Get API data\n  useEffect(() => {\n    const getExpensesMap = async () => {\n      try {\n        setIsLoading(true);\n        const getExpensesFromAPI = await fetch(API_URL);\n        if (!getExpensesFromAPI.ok) {\n          throw new Error(\n            `Problem getting products. Status: ${getExpensesFromAPI.status}`\n          );\n        }\n        const data = await getExpensesFromAPI.json();\n        setIsLoading(false);\n        setExpenses(data.items);\n      } catch (err) {\n        // If error then show message\n        let message;\n        if (err instanceof Error) message = err.message;\n        else message = String(err);\n        reportError({ message });\n      }\n    };\n    getExpensesMap();\n  }, []);\n\n  // Calculate the Gross\n  const calcGross = (net, tax) => {\n    return Number(net) + Number(tax);\n  };\n\n  // Calculate the total\n  const calcTotal = expenses.reduce((sum, exp) => {\n    const total = sum + calcGross(exp.net, exp.tax);\n    return total;\n  }, 0);\n\n  // Format currency\n  const formatCurrency = (value) =>\n    new Intl.NumberFormat(\"de-DE\", {\n      style: \"currency\",\n      currency: \"EUR\",\n    }).format(value);\n\n  return (\n    <>\n      <h1>Alasco HQ: Expense Tracking</h1>\n\n      {expenses.map((expense) => (\n        <div key={expense.id} className=\"expenses-list\">\n          <h2>{expense.name}</h2>\n          <p>Net: {formatCurrency(expense.net)}</p>\n          <p>Tax: {formatCurrency(expense.tax)}</p>\n          <p>Gross: {calcGross(expense.net, expense.tax)}</p>\n        </div>\n      ))}\n\n      <h3>Total expenses: {calcTotal}</h3>\n    </>\n  );\n}\n", "export const API_URL =\n  \"https://9tt010tdl0.execute-api.eu-central-1.amazonaws.com/prod\";\n"],
  "mappings": ";;;;;;;;AAAA;;;ACAA;AAAA,mBAAoC;;;ACApC;AAAO,IAAM,UACX;;;ADIa,iBAAiB;AAC9B,QAAM,CAAC,UAAU,eAAe,2BAAS;AACzC,QAAM,CAAC,YAAY,iBAAiB,2BAAS;AAC7C,QAAM,CAAC,WAAW,gBAAgB,2BAAkB;AACpD,QAAM,CAAC,eAAe,oBAAoB,2BAAS;AAGnD,8BAAU,MAAM;AACd,UAAM,iBAAiB,YAAY;AACjC,UAAI;AACF,qBAAa;AACb,cAAM,qBAAqB,MAAM,MAAM;AACvC,YAAI,CAAC,mBAAmB,IAAI;AAC1B,gBAAM,IAAI,MACR,qCAAqC,mBAAmB;AAAA;AAG5D,cAAM,OAAO,MAAM,mBAAmB;AACtC,qBAAa;AACb,oBAAY,KAAK;AAAA,eACV,KAAP;AAEA,YAAI;AACJ,YAAI,eAAe;AAAO,oBAAU,IAAI;AAAA;AACnC,oBAAU,OAAO;AACtB,oBAAY,EAAE;AAAA;AAAA;AAGlB;AAAA,KACC;AAGH,QAAM,YAAY,CAAC,KAAK,QAAQ;AAC9B,WAAO,OAAO,OAAO,OAAO;AAAA;AAI9B,QAAM,YAAY,SAAS,OAAO,CAAC,KAAK,QAAQ;AAC9C,UAAM,QAAQ,MAAM,UAAU,IAAI,KAAK,IAAI;AAC3C,WAAO;AAAA,KACN;AAGH,QAAM,iBAAiB,CAAC,UACtB,IAAI,KAAK,aAAa,SAAS;AAAA,IAC7B,OAAO;AAAA,IACP,UAAU;AAAA,KACT,OAAO;AAEZ,SACE,0DACE,oCAAC,MAAD,MAAI,gCAEH,SAAS,IAAI,CAAC,YACb,oCAAC,OAAD;AAAA,IAAK,KAAK,QAAQ;AAAA,IAAI,WAAU;AAAA,KAC9B,oCAAC,MAAD,MAAK,QAAQ,OACb,oCAAC,KAAD,MAAG,SAAM,eAAe,QAAQ,OAChC,oCAAC,KAAD,MAAG,SAAM,eAAe,QAAQ,OAChC,oCAAC,KAAD,MAAG,WAAQ,UAAU,QAAQ,KAAK,QAAQ,SAI9C,oCAAC,MAAD,MAAI,oBAAiB;AAAA;",
  "names": []
}
